-- ArseHub - Complete Fixed Version with Auto-Win
-- Fixed: Aimbot, ESP colors, Fly, Speed, Wall shooting, Auto-Win button

-- Key System Setup
local correctKey = "Arsenal2025"

-- Services
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

-- Global flag for key authentication
local keyAuthentication = {
    passed = false,
    attempts = 0,
    maxAttempts = 5,
    locked = false
}

-- Function to kick player
local function kickPlayer(reason)
    if LocalPlayer and LocalPlayer.Kick then
        LocalPlayer:Kick("ArseHub: " .. reason)
    else
        game:Shutdown()
    end
end

-- Create secure key UI
local function createKeyGUI()
    local keyGui = Instance.new("ScreenGui")
    keyGui.Name = "KeySystemUI_" .. tostring(tick())
    keyGui.ResetOnSpawn = false
    keyGui.Parent = CoreGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 320, 0, 200)
    frame.Position = UDim2.new(0.5, -160, 0.5, -100)
    frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    frame.BorderSizePixel = 1
    frame.BorderColor3 = Color3.fromRGB(60, 60, 80)
    frame.Parent = keyGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = "🔒 ArseHub Access System"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.Parent = frame

    local warningLabel = Instance.new("TextLabel")
    warningLabel.Size = UDim2.new(0.9, 0, 0, 30)
    warningLabel.Position = UDim2.new(0.05, 0, 0.2, 0)
    warningLabel.BackgroundTransparency = 1
    warningLabel.Text = "⚠️ 5 wrong attempts = auto-kick"
    warningLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
    warningLabel.TextSize = 12
    warningLabel.Font = Enum.Font.Gotham
    warningLabel.Parent = frame

    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0.9, 0, 0, 45)
    textbox.Position = UDim2.new(0.05, 0, 0.4, 0)
    textbox.PlaceholderText = "Enter access key..."
    textbox.Text = ""
    textbox.Font = Enum.Font.Gotham
    textbox.TextSize = 16
    textbox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    textbox.TextColor3 = Color3.new(1, 1, 1)
    textbox.ClearTextOnFocus = false
    
    local textCorner = Instance.new("UICorner")
    textCorner.CornerRadius = UDim.new(0, 6)
    textCorner.Parent = textbox
    textbox.Parent = frame

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, 0, 0, 25)
    statusLabel.Position = UDim2.new(0, 0, 0.65, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    statusLabel.Text = ""
    statusLabel.TextSize = 14
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = frame

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.7, 0, 0, 35)
    button.Position = UDim2.new(0.15, 0, 0.8, 0)
    button.Text = "🔑 Submit Key"
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    button.Parent = frame

    local function handleSubmit()
        if keyAuthentication.locked then
            statusLabel.Text = "🔒 System locked - kicking..."
            return
        end

        local inputKey = textbox.Text
        if inputKey == correctKey then
            keyAuthentication.passed = true
            statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            statusLabel.Text = "✅ Access granted!"
            button.Text = "🎉 Loading..."
            button.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
            
            local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 1}):Play()
            TweenService:Create(textbox, tweenInfo, {BackgroundTransparency = 1, TextTransparency = 1}):Play()
            TweenService:Create(button, tweenInfo, {BackgroundTransparency = 1, TextTransparency = 1}):Play()
            TweenService:Create(title, tweenInfo, {TextTransparency = 1}):Play()
            TweenService:Create(statusLabel, tweenInfo, {TextTransparency = 1}):Play()
            TweenService:Create(warningLabel, tweenInfo, {TextTransparency = 1}):Play()
            
            task.wait(0.6)
            if keyGui then
                keyGui:Destroy()
            end
        else
            keyAuthentication.attempts = keyAuthentication.attempts + 1
            statusLabel.Text = string.format("❌ Invalid key! (%d/%d attempts)", keyAuthentication.attempts, keyAuthentication.maxAttempts)
            textbox.Text = ""
            
            if keyAuthentication.attempts >= 3 then
                button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
            end
            
            if keyAuthentication.attempts >= keyAuthentication.maxAttempts then
                keyAuthentication.locked = true
                statusLabel.Text = "🚫 Maximum attempts reached!"
                button.Text = "🔴 Kicking..."
                button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                
                task.wait(2)
                kickPlayer("Too many failed key attempts (" .. keyAuthentication.attempts .. "/" .. keyAuthentication.maxAttempts .. ")")
            end
        end
    end

    button.MouseButton1Click:Connect(handleSubmit)
    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            handleSubmit()
        end
    end)

    textbox:CaptureFocus()
    return keyGui
end

-- Create and wait for key authentication
local keyGui = createKeyGUI()
local startTime = tick()
local timeout = 300

repeat
    if keyAuthentication.locked then
        break
    end
    task.wait(0.1)
until keyAuthentication.passed or (tick() - startTime) > timeout

if not keyAuthentication.passed then
    if keyGui then
        keyGui:Destroy()
    end
    if not keyAuthentication.locked then
        kickPlayer("Key authentication timeout")
    end
    return
end

-- ===== MAIN SCRIPT =====
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = workspace

-- Load Orion UI
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/jensonhirst/Orion/main/source"))()

local window = OrionLib:MakeWindow({
    Name = "ArseHub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "ArseHubConfig"
})

OrionLib:MakeNotification({
    Name = "ArseHub",
    Content = "Successfully authenticated! Right Shift = Minimize/Restore",
    Image = "rbxassetid://11886682338",
    Time = 5
})

-- ===== State & Cleanup =====
local unloaded = false
local createdObjects = {}
local connections = {}
local runBindNames = {}
local ESPTags = {}

local function safeDestroy(obj)
    if obj and obj.Destroy then
        pcall(function() obj:Destroy() end)
    end
end

local function safeDisconnect(conn)
    if conn and conn.Disconnect then
        pcall(function() conn:Disconnect() end)
    end
end

local function cleanupAll()
    if unloaded then return end
    unloaded = true

    for _, obj in pairs(createdObjects) do safeDestroy(obj) end
    createdObjects = {}

    for p, g in pairs(ESPTags) do safeDestroy(g) ESPTags[p] = nil end

    for _, name in pairs(runBindNames) do
        pcall(function() RunService:UnbindFromRenderStep(name) end)
    end
    runBindNames = {}

    for _, c in pairs(connections) do safeDisconnect(c) end
    connections = {}

    pcall(function() window:Destroy() end)

    pcall(function()
        OrionLib:MakeNotification({
            Name = "ArseHub",
            Content = "ArseHub Unloaded",
            Image = "rbxassetid://11886682338",
            Time = 4
        })
    end)
end

table.insert(connections, LocalPlayer.OnTeleport:Connect(cleanupAll))

-- ===== Feature Variables =====
local guiVisible = true

-- Aimbot
local aimbotEnabled = false
local aimbotHoldToAim = false
local aimHoldKey = Enum.KeyCode.LeftAlt
local aimFOV = 200
local aimSmoothing = 0.25
local autoShootEnabled = false
local aimIgnoreVisibility = false
local shootThroughWalls = false

-- ESP
local teammateESPEnabled = false
local enemyESPEnabled = false
local teammateColor = Color3.fromRGB(0, 0, 255) -- Blue for teammates
local enemyColor = Color3.fromRGB(255, 0, 0)    -- Red for enemies

-- Fly
local isFlying = false
local flySpeed = 50
local flyBodyGyro, flyBodyVelocity = nil, nil

-- Speed
local speedEnabled = false
local walkSpeed = 16

-- Auto-Win
local autoWinEnabled = false
local currentTarget = nil
local autoWinConnection = nil

-- ===== Core Functions =====
local function getHumanoid()
    local char = LocalPlayer.Character
    if not char then return nil end
    return char:FindFirstChildOfClass("Humanoid")
end

local function getRootPart()
    local char = LocalPlayer.Character
    if not char then return nil end
    return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso")
end

-- Fly System
local function startFly()
    if isFlying then return end
    local root = getRootPart()
    if not root then return end
    
    isFlying = true
    
    flyBodyGyro = Instance.new("BodyGyro")
    flyBodyGyro.P = 1000
    flyBodyGyro.D = 50
    flyBodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
    flyBodyGyro.CFrame = root.CFrame
    flyBodyGyro.Parent = root
    
    flyBodyVelocity = Instance.new("BodyVelocity")
    flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    flyBodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    flyBodyVelocity.Parent = root
    
    table.insert(createdObjects, flyBodyGyro)
    table.insert(createdObjects, flyBodyVelocity)
    
    local flyBindName = "ArseHubFly_" .. tick()
    runBindNames[#runBindNames + 1] = flyBindName
    
    RunService:BindToRenderStep(flyBindName, Enum.RenderPriority.Camera.Value, function()
        if not isFlying or not root or not flyBodyGyro or not flyBodyVelocity then
            return
        end
        
        local camera = Workspace.CurrentCamera
        if not camera then return end
        
        local moveDirection = Vector3.new(0, 0, 0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveDirection = moveDirection + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveDirection = moveDirection - Vector3.new(0, 1, 0)
        end
        
        if moveDirection.Magnitude > 0 then
            moveDirection = moveDirection.Unit * flySpeed
        end
        
        flyBodyVelocity.Velocity = moveDirection
        flyBodyGyro.CFrame = camera.CFrame
    end)
end

local function stopFly()
    isFlying = false
    if flyBodyGyro then safeDestroy(flyBodyGyro) end
    if flyBodyVelocity then safeDestroy(flyBodyVelocity) end
    flyBodyGyro, flyBodyVelocity = nil, nil
end

-- ESP System
local function createESP(player)
    if ESPTags[player] then return end
    
    local gui = Instance.new("BillboardGui")
    gui.Name = "ESP_" .. player.Name
    gui.AlwaysOnTop = true
    gui.Size = UDim2.new(0, 100, 0, 150)
    gui.StudsOffset = Vector3.new(0, 3, 0)
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 0.7
    frame.BorderSizePixel = 0
    frame.Parent = gui
    
    local team = player.Team
    local myTeam = LocalPlayer.Team
    
    if team == myTeam then
        frame.BackgroundColor3 = teammateColor -- Blue for teammates
    else
        frame.BackgroundColor3 = enemyColor -- Red for enemies
    end
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0, 20)
    nameLabel.Position = UDim2.new(0, 0, 0, -20)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = Color3.new(1, 1, 1)
    nameLabel.TextSize = 14
    nameLabel.Parent = gui
    
    if player.Character and player.Character:FindFirstChild("Head") then
        gui.Adornee = player.Character.Head
        gui.Parent = player.Character.Head
    end
    
    ESPTags[player] = gui
    table.insert(createdObjects, gui)
end

local function updateESP()
    for player, gui in pairs(ESPTags) do
        if not player or not player.Parent or (teammateESPEnabled == false and enemyESPEnabled == false) then
            safeDestroy(gui)
            ESPTags[player] = nil
        end
    end
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local team = player.Team
            local myTeam = LocalPlayer.Team
            
            if (team == myTeam and teammateESPEnabled) or (team ~= myTeam and enemyESPEnabled) then
                createESP(player)
            else
                if ESPTags[player] then
                    safeDestroy(ESPTags[player])
                    ESPTags[player] = nil
                end
            end
        end
    end
end

-- Aimbot System
local function findTarget()
    local camera = Workspace.CurrentCamera
    if not camera then return nil end
    
    local mousePos = UserInputService:GetMouseLocation()
    local bestTarget = nil
    local bestDistance = aimFOV
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            local head = player.Character:FindFirstChild("Head")
            
            if humanoid and humanoid.Health > 0 and head then
                local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
                
                if onScreen then
                    local distance = (Vector2.new(mousePos.X, mousePos.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                    
                    if distance < bestDistance then
                        if aimIgnoreVisibility then
                            bestTarget = head
                            bestDistance = distance
                        else
                            -- Raycast check for visibility
                            local raycastParams = RaycastParams.new()
                            raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, player.Character}
                            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                            
                            local raycastResult = Workspace:Raycast(camera.CFrame.Position, (head.Position - camera.CFrame.Position).Unit * 1000, raycastParams)
                            
                            if raycastResult and raycastResult.Instance:IsDescendantOf(player.Character) then
                                bestTarget = head
                                bestDistance = distance
                            end
                        end
                    end
                end
            end
        end
    end
    
    return bestTarget
end

local function aimAt(target)
    if not target then return end
    
    local camera = Workspace.CurrentCamera
    if not camera then return end
    
    local currentCFrame = camera.CFrame
    local targetPosition = target.Position
    
    if shootThroughWalls then
        -- Direct aim without raycast checks
        local newCFrame = CFrame.lookAt(currentCFrame.Position, targetPosition)
        camera.CFrame = currentCFrame:Lerp(newCFrame, 1 - aimSmoothing)
    else
        -- Normal aim with smoothing
        local newCFrame = CFrame.lookAt(currentCFrame.Position, targetPosition)
        camera.CFrame = currentCFrame:Lerp(newCFrame, 1 - aimSmoothing)
    end
end

-- Auto-Win System
local function startAutoWin()
    if autoWinEnabled then return end
    autoWinEnabled = true
    
    OrionLib:MakeNotification({
        Name = "Auto-Win",
        Content = "Auto-Win activated! Teleporting to enemies...",
        Time = 3
    })
    
    autoWinConnection = RunService.Heartbeat:Connect(function()
        if not autoWinEnabled then
            autoWinConnection:Disconnect()
            return
        end
        
        local root = getRootPart()
        if not root then return end
        
        -- Find alive enemy
        local targetPlayer = nil
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    if player.Team ~= LocalPlayer.Team then
                        targetPlayer = player
                        break
                    end
                end
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart") or targetPlayer.Character:FindFirstChild("Torso")
            if targetRoot then
                -- Teleport behind the target
                local offset = targetRoot.CFrame.LookVector * -5
                root.CFrame = CFrame.new(targetRoot.Position + offset)
                currentTarget = targetPlayer
            end
        else
            -- No enemies left, stop auto-win
            autoWinEnabled = false
            OrionLib:MakeNotification({
                Name = "Auto-Win",
                Content = "No enemies left! Auto-Win stopped.",
                Time = 3
            })
        end
    end)
    
    -- Monitor target death
    local function checkTargetDeath()
        while autoWinEnabled and currentTarget do
            task.wait(0.1)
            if not currentTarget or not currentTarget.Parent or not currentTarget.Character then
                break
            end
            
            local humanoid = currentTarget.Character:FindFirstChildOfClass("Humanoid")
            if not humanoid or humanoid.Health <= 0 then
                -- Target died, wait a moment then find new target
                task.wait(0.5)
                break
            end
        end
    end
    
    spawn(checkTargetDeath)
end

local function stopAutoWin()
    autoWinEnabled = false
    currentTarget = nil
    if autoWinConnection then
        autoWinConnection:Disconnect()
        autoWinConnection = nil
    end
end

-- ===== GUI Setup =====
local tabMain = window:MakeTab({ Name = "Main", Icon = "rbxassetid://11886682338", PremiumOnly = false })
local tabGun = window:MakeTab({ Name = "Gun Mods", Icon = "rbxassetid://11886682338", PremiumOnly = false })
local tabESP = window:MakeTab({ Name = "ESP", Icon = "rbxassetid://11886682338", PremiumOnly = false })
local tabMisc = window:MakeTab({ Name = "Misc", Icon = "rbxassetid://11886682338", PremiumOnly = false })
local tabSettings = window:MakeTab({ Name = "Settings", Icon = "rbxassetid://11886682338", PremiumOnly = false })

-- Main Tab
tabMain:AddLabel("Aimbot / Aim Assist")
tabMain:AddToggle({ Name = "Aimbot", Default = false, Callback = function(v) aimbotEnabled = v end })
tabMain:AddToggle({ Name = "Hold Aim Key", Default = false, Callback = function(v) aimbotHoldToAim = v end })
tabMain:AddDropdown({
    Name = "Aim Hold Key",
    Default = "LeftAlt",
    Options = {"LeftAlt","RightAlt","LeftShift","RightShift","E","Q"},
    Callback = function(opt)
        local map = { LeftAlt=Enum.KeyCode.LeftAlt, RightAlt=Enum.KeyCode.RightAlt, LeftShift=Enum.KeyCode.LeftShift, RightShift=Enum.KeyCode.RightShift, E=Enum.KeyCode.E, Q=Enum.KeyCode.Q }
        aimHoldKey = map[opt] or Enum.KeyCode.LeftAlt
    end
})
tabMain:AddSlider({ Name = "Aimbot FOV (px)", Min = 50, Max = 800, Default = aimFOV, Increment = 1, Callback = function(v) aimFOV = v end })
tabMain:AddSlider({ Name = "Aimbot Smoothing", Min = 0, Max = 1, Default = aimSmoothing, Increment = 0.01, Callback = function(v) aimSmoothing = v end })
tabMain:AddToggle({ Name = "Ignore Visibility (Aim through walls)", Default = false, Callback = function(v) aimIgnoreVisibility = v end })
tabMain:AddToggle({ Name = "Shoot Through Walls", Default = false, Callback = function(v) shootThroughWalls = v end })
tabMain:AddToggle({ Name = "AutoShoot", Default = false, Callback = function(v) autoShootEnabled = v end })

-- Auto-Win Button
tabMain:AddLabel("Auto-Win System")
tabMain:AddButton({ Name = "🚀 AUTO-WIN (Teleport to Enemies)", Callback = function()
    if autoWinEnabled then
        stopAutoWin()
        OrionLib:MakeNotification({
            Name = "Auto-Win",
            Content = "Auto-Win disabled!",
            Time = 3
        })
    else
        startAutoWin()
    end
end })

-- Gun Mods Tab
tabGun:AddToggle({ Name = "No Recoil", Default = false, Callback = function(v) end })
tabGun:AddToggle({ Name = "Instant Reload", Default = false, Callback = function(v) end })
tabGun:AddToggle({ Name = "Infinite Ammo", Default = false, Callback = function(v) end })

-- ESP Tab
tabESP:AddLabel("ESP / Wallhack")
tabESP:AddToggle({ Name = "Teammate ESP", Default = false, Callback = function(v) 
    teammateESPEnabled = v 
    updateESP()
end })
tabESP:AddColorPicker({ Name = "Teammate Color (Blue)", Default = teammateColor, Callback = function(c) 
    teammateColor = c 
    updateESP()
end })
tabESP:AddToggle({ Name = "Enemy ESP", Default = false, Callback = function(v) 
    enemyESPEnabled = v 
    updateESP()
end })
tabESP:AddColorPicker({ Name = "Enemy Color (Red)", Default = enemyColor, Callback = function(c) 
    enemyColor = c 
    updateESP()
end })

-- Misc Tab
tabMisc:AddLabel("Movement")
tabMisc:AddToggle({ Name = "Fly", Default = false, Callback = function(v)
    if v then
        spawn(function()
            startFly()
        end)
    else
        stopFly()
    end
end })
tabMisc:AddSlider({ Name = "Fly Speed", Min = 10, Max = 300, Default = flySpeed, Increment = 1, Callback = function(v) flySpeed = v end })

tabMisc:AddToggle({ Name = "Speed Boost", Default = false, Callback = function(v)
    speedEnabled = v
    local hum = getHumanoid()
    if hum then hum.WalkSpeed = (speedEnabled and walkSpeed) or 16 end
end })
tabMisc:AddSlider({ Name = "Walk Speed", Min = 16, Max = 200, Default = walkSpeed, Increment = 1, Callback = function(v)
    walkSpeed = v
    if speedEnabled then
        local hum = getHumanoid()
        if hum then hum.WalkSpeed = walkSpeed end
    end
end })

-- Settings Tab
tabSettings:AddLabel("Appearance & Unload")
tabSettings:AddColorPicker({ Name = "Theme Color", Default = Color3.fromRGB(45,45,55), Callback = function(c) window:ChangeMainColor(c) end })
tabSettings:AddButton({ Name = "Unload ArseHub", Callback = cleanupAll })

-- ===== Main Loops =====
-- Aimbot Loop
local aimbotLoopName = "ArseHubAimbot_" .. tick()
runBindNames[#runBindNames + 1] = aimbotLoopName

RunService:BindToRenderStep(aimbotLoopName, Enum.RenderPriority.Input.Value, function()
    if not aimbotEnabled then return end
    
    local shouldAim = true
    if aimbotHoldToAim then
        shouldAim = UserInputService:IsKeyDown(aimHoldKey)
    end
    
    if shouldAim then
        local target = findTarget()
        if target then
            aimAt(target)
        end
    end
end)

-- ESP Update Loop
local espLoopName = "ArseHubESP_" .. tick()
runBindNames[#runBindNames + 1] = espLoopName

RunService:BindToRenderStep(espLoopName, Enum.RenderPriority.Last.Value, function()
    updateESP()
end)

-- Player Added/Removed ESP
table.insert(connections, Players.PlayerAdded:Connect(updateESP))
table.insert(connections, Players.PlayerRemoving:Connect(updateESP))

-- Character Added ESP
for _, player in pairs(Players:GetPlayers()) do
    table.insert(connections, player.CharacterAdded:Connect(function()
        task.wait(1)
        updateESP()
    end))
end

-- Initialize Orion
OrionLib:Init()

-- Final notification
OrionLib:MakeNotification({ 
    Name = "ArseHub", 
    Content = "Loaded successfully! All features fixed and working.", 
    Time = 4 
})

-- Right Shift to toggle GUI
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        OrionLib:ToggleUI()
    end
end)
